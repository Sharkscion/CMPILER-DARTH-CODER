ImperialCredit _avril <3> = {12}.
Side _trueOrFalse.
Side _hi = LightSide.
Declare Legion _gio = "weirdo".
ImperialCredit #thisIsAFunc [Legion _a, Unit _b] {a}
ImperialCredit #thisIsAFunc [] {a}
ImperialCredit #thisIsAFunc [Legion _a, Unit _b] {}
ImperialCredit #thisIsAFunc [] {}
ImperialCredit #thisIsAFunc [Legion _a, Unit _b] {a Transmit 2+3.}
ImperialCredit #thisIsAFunc [] {a Transmit 'a'.}
ImperialCredit #thisIsAFunc [Legion _a, Unit _b] {Transmit "swerng".}
[ 1+2 || 2]
[1>3 == 3]
[5>=8 <= 4]
[5 != 5 == 6 <=4]
ImperialCredit _avril <3> = {12}.
ForceInstance [2 < 4] {a} InstanceVariant [4 != 5] {a} InstanceVariant [2 != 3] {a} NoVariant {a}
#function[12,'a']
#function[]
ForceInstance [_hi < 4] {a}
ForceCommand [_hi = 0. _hi < 7. _hi++.] {a}
ForceOrder{a} ForceAnalyze[5 < 7].
ForceAnalyze[_hi != 6] {a}
Initiate { ForceAnalyze[] {}  }
Initiate { ForceOrder{ImperialCredit _credit = 32. }ForceAnalyze[_hi <= 1].  }
Initiate { _hi++. }
Initiate { EncodeGalacticCredit [     "a"   ]. }

ImperialCredit #func1 [Unit _unitVar] { ImperialCredit _number = 4.  ForceAnalyze [_number > 1]{ _number = _number - 1. EncodeUnit[_unitVar].}}  Legion #legionFunc[]{} Initiate {}
Legion #convertToStringFormat[GalacticCredit _hours, GalacticCredit _minutes] { Legion _res = "". Legion _end = "am". ForceInstance[_hours > 12 && _hours != 0] { _hours = _hours - 12. _end = "pm". } InstanceVariant[_hours == 0] { _hours = 12. } Legion _hourString = "" + _hours. Legion _minString = "" + _minutes. ForceInstance[_hours < 10] { _hourString = "0" + _hourString. } ForceInstance[_minutes < 10] { _minString = "0" + _minString. } Transmit _hourString + ":" + _minString + _res. } Initiate{}
Initiate{ GalacticCredit _number. EncodeGalacticCredit[_number]. Legion _res <_number>. GalacticCredit _i. ForceCommand[_i = 0. _i < _number. _i++.] { Decode["Enter hour in military format: "]. GalacticCredit _hour. EncodeGalacticCredit[_hour]. Decode["Enter minute in military format: "]. GalacticCredit _minute. EncodeGalacticCredit[_minute]. Legion _result = #convertToStringFormat[_hour, _minute]. _res<_number - _i - 1> = _result. } }
Initiate{Decode[#func1[]].}
Initiate{Decode["hi"].}